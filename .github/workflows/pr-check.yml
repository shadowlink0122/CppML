name: PR Check

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

jobs:
  format-check:
    name: 🎨 Code Formatting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout PR
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        
    - name: Install clang-format
      run: |
        sudo apt-get update -q
        sudo apt-get install -y clang-format
        
    - name: Check code formatting
      id: format
      run: |
        echo "🎨 Checking code format..."
        if make fmt-check; then
          echo "status=✅ Passed" >> $GITHUB_OUTPUT
          echo "passed=true" >> $GITHUB_OUTPUT
        else
          echo "status=❌ Failed" >> $GITHUB_OUTPUT
          echo "passed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Upload format results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: format-results
        path: |
          .clang-format
        retention-days: 1

  static-analysis:
    name: 🔍 Static Analysis
    runs-on: ubuntu-latest
    needs: format-check
    
    steps:
    - name: Checkout PR
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        
    - name: Install cppcheck
      run: |
        sudo apt-get update -q
        sudo apt-get install -y cppcheck
        
    - name: Run static analysis
      id: analysis
      run: |
        echo "🔍 Running static analysis..."
        if make check; then
          echo "status=✅ Passed" >> $GITHUB_OUTPUT
          echo "passed=true" >> $GITHUB_OUTPUT
        else
          echo "status=⚠️ Warnings" >> $GITHUB_OUTPUT
          echo "passed=true" >> $GITHUB_OUTPUT  # Allow warnings
        fi

  # Build test - commented out until source files are implemented
  # build-test:
  #   name: 🏗️ Build Test
  #   runs-on: ubuntu-latest
  #   needs: [format-check, static-analysis]
  #   
  #   steps:
  #   - name: Checkout PR
  #     uses: actions/checkout@v4
  #     with:
  #       ref: ${{ github.event.pull_request.head.sha }}
  #       
  #   - name: Install build tools
  #     run: |
  #       sudo apt-get update -q
  #       sudo apt-get install -y build-essential make
  #       
  #   - name: Test build
  #     id: build
  #     run: |
  #       echo "🏗️ Testing build..."
  #       if make clean && make all; then
  #         echo "status=✅ Passed" >> $GITHUB_OUTPUT
  #         echo "passed=true" >> $GITHUB_OUTPUT
  #       else
  #         echo "status=❌ Failed" >> $GITHUB_OUTPUT
  #         echo "passed=false" >> $GITHUB_OUTPUT
  #       fi

  pr-status:
    name: 🏁 Final Status
    runs-on: ubuntu-latest
    needs: [format-check, static-analysis]
    if: always()
    
    steps:
    - name: Determine final status
      run: |
        echo "📊 Final Status Check"
        echo "Format Check: ${{ needs.format-check.result }}"
        echo "Static Analysis: ${{ needs.static-analysis.result }}"
        
        # Only fail if format check fails (critical)
        if [ "${{ needs.format-check.result }}" != "success" ]; then
          echo "❌ PR check failed - formatting issues must be fixed"
          exit 1
        else
          echo "✅ PR check passed - ready for review"
        fi
